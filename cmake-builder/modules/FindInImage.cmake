#
# Find the INIMAGE includes and library
##
# sets INIMAGE_INCLUDE_DIR
#      INIMAGE_LIBRARY
#      INIMAGE_DEBUG_LIBRARY
#      INIMAGE_FOUND
#      INIMAGE_LIBRARIES
#      INIMAGE_LIBRARY_DIR


FIND_PATH(INIMAGE_INCLUDE_DIR inimage/Image.hpp
  ${INIMAGE_ROOT}/include
  /usr/local/include
  /usr/include
)

IF(WIN32)
  FIND_LIBRARY(INIMAGE_LIBRARY
               NAMES InImage
               PATHS ${INIMAGE_INCLUDE_DIR}/../lib
               ${INIMAGE_INCLUDE_DIR}/../lib/${ARCH})
  FIND_LIBRARY(INIMAGE_LIBRARY_DEBUG
               NAMES InImaged InImage_debug InImage
               PATHS ${INIMAGE_INCLUDE_DIR}/../lib
               ${INIMAGE_DEBUG_INCLUDE_DIR}/../lib/${ARCH})
ELSE(WIN32)
  FIND_LIBRARY(INIMAGE_LIBRARY 
               NAMES inimage
               PATHS ${INIMAGE_INCLUDE_DIR}/../lib
               /usr/local/lib
               /usr/lib)
  FIND_LIBRARY(INIMAGE_LIBRARY_DEBUG 
               NAMES inimage_debug
               PATHS ${INIMAGE_INCLUDE_DIR}/../lib
               /usr/local/lib
               /usr/lib)
ENDIF(WIN32)


SET(INIMAGE_FOUND "NO")
IF(INIMAGE_INCLUDE_DIR AND INIMAGE_LIBRARY)
  GET_FILENAME_COMPONENT( INIMAGE_LIBRARY_DIR ${INIMAGE_LIBRARY} PATH )
  GET_FILENAME_COMPONENT( INIMAGE_LIBRARY ${INIMAGE_LIBRARY} NAME )
  IF(WIN32)
    SET(INIMAGE_LIBRARIES optimized ${INIMAGE_LIBRARY} ${CMAKE_DL_LIBS})
    IF(INIMAGE_LIBRARY_DEBUG)
      GET_FILENAME_COMPONENT( INIMAGE_LIBRARY_DEBUG ${INIMAGE_LIBRARY_DEBUG} NAME )
      SET(INIMAGE_LIBRARIES ${INIMAGE_LIBRARIES} debug ${INIMAGE_LIBRARY_DEBUG})
    ENDIF(INIMAGE_LIBRARY_DEBUG)
  ELSE(WIN32)
    SET(INIMAGE_LIBRARIES general ${INIMAGE_LIBRARY} ${CMAKE_DL_LIBS})
  ENDIF(WIN32)
  SET(INIMAGE_FOUND "YES")
ENDIF(INIMAGE_INCLUDE_DIR AND INIMAGE_LIBRARY)

SET(INIMAGE_LIBRARIES "${INIMAGE_LIBRARIES}" CACHE STRING "List of INIMAGE libraries")
SET(INIMAGE_LIBRARY_DIRS "${INIMAGE_LIBRARY_DIR}" CACHE STRING "Path to INIMAGE libraries")

