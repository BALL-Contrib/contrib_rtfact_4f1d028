#include "output.cg"

uniform samplerRECT uDistanceTexture:FBDistance;
uniform samplerRECT uColorTexture:FBColor;
uniform samplerRECT uNormalTexture:FBNormal;
uniform samplerRECT uAmbientOcclusionTexture:FBAmbientOcclusion;
uniform float uLambda:AOBlurLambda;
uniform float uPhi:AOBlurPhi;

varying float2 vFragment:TEXCOORD0;

//@
float4 approx_gradient_2(samplerRECT buffer,
                         float2 texCoord)
{
	float4 gradx = (texRECT(buffer, float2(texCoord.x + 1.0f, texCoord.y)) -
				    texRECT(buffer, float2(texCoord.x - 1.0f, texCoord.y))) * 0.5f;
	float4 grady = (texRECT(buffer, float2(texCoord.x, texCoord.y + 1.0f)) -
				    texRECT(buffer, float2(texCoord.x, texCoord.y - 1.0f))) * 0.5f;

	return gradx * gradx + grady * grady;
}

float compute_diffusivity(samplerRECT colorBuffer,
                          samplerRECT normalBuffer,
                          samplerRECT depthBuffer,
                          float2 texCoord)
{
	float4 color_grad  = approx_gradient_2(colorBuffer, vFragment);
	float4 normal_grad = approx_gradient_2(normalBuffer, vFragment);
	float4 depth_grad  = approx_gradient_2(depthBuffer, vFragment);
	float4 temp_grad   = color_grad + normal_grad + depth_grad;
	float spatial_grad = 0.2125f * temp_grad.x + 0.7154f * temp_grad.y + 0.0721f * temp_grad.z;
	return 1.0f / (1.0f + spatial_grad / (uLambda * uLambda));
}

float approx_diffusivity(samplerRECT colorBuffer,
                         samplerRECT normalBuffer,
                         samplerRECT depthBuffer,
                         float2 texCoord0,
                         float2 texCoord1)
{
    float diff0 = compute_diffusivity(colorBuffer,
                                      normalBuffer,
                                      depthBuffer,
                                      texCoord0);
    float diff1 = compute_diffusivity(colorBuffer,
                                      normalBuffer,
                                      depthBuffer,
                                      texCoord1);
	return 0.5f * (diff0 + diff1);
}

float4 blur() outputs(COLOR)
{
	float ip1j = approx_diffusivity(uAmbientOcclusionTexture,
                                    uNormalTexture,
                                    uDistanceTexture,
                                    float2(vFragment),
                                    float2(vFragment.x + 1.0f, vFragment.y));

	float im1j = approx_diffusivity(uAmbientOcclusionTexture,
                                    uNormalTexture,
                                    uDistanceTexture,
                                    float2(vFragment),
                                    float2(vFragment.x - 1.0f, vFragment.y));

	float ijp1 = approx_diffusivity(uAmbientOcclusionTexture,
                                    uNormalTexture,
                                    uDistanceTexture,
                                    float2(vFragment),
                                    float2(vFragment.x, vFragment.y + 1.0f));

	float ijm1 = approx_diffusivity(uAmbientOcclusionTexture,
                                    uNormalTexture,
                                    uDistanceTexture,
                                    float2(vFragment),
                                    float2(vFragment.x, vFragment.y - 1.0f));

	float val  = uPhi * ip1j * texRECT(uAmbientOcclusionTexture, float2(vFragment.x + 1.0f, vFragment.y)).x +
				 uPhi * im1j * texRECT(uAmbientOcclusionTexture, float2(vFragment.x - 1.0f, vFragment.y)).x +
				 uPhi * ijp1 * texRECT(uAmbientOcclusionTexture, float2(vFragment.x, vFragment.y + 1.0f)).x +
				 uPhi * ijm1 * texRECT(uAmbientOcclusionTexture, float2(vFragment.x, vFragment.y - 1.0f)).x +
				 (1.0f - uPhi * (ip1j + im1j + ijp1 + ijm1)) * texRECT(uAmbientOcclusionTexture, vFragment).x;
	return val;

	// Visualize diffusivity
	//return float4(compute_diffusivity(vFragment));
}
//@

technique Main {
    pass rtao_blur0 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur1 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur2 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur3 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur4 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur5 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

    pass rtao_blur6 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur7 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur8 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur9 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur10 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur11 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

    pass rtao_blur12 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur13 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur14 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur15 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur16 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur17 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

    pass rtao_blur18 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur19 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur20 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur21 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur22 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur23 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

    pass rtao_blur24 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur25 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur26 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur27 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur28 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur29 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

    pass rtao_blur30 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur31 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur32 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur33 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur34 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur35 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }

	pass rtao_blur36 <
        string output = "FBAmbientOcclusion";>
    {
        FragmentProgram = compile fp40 blur();
    }
}
#endif
